spring:
  profiles:
    active: ${CONTEXT_PROFILE:development}
  datasource:
    url: ${postgres.url}
    username: ${postgres.username}
    password: ${postgres.password}
    schema: ${postgres.schema}
    driver-class-name: org.postgresql.Driver

  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none
    driver-class-name: org.postgresql.Driver

  flyway:
    locations:
      - classpath:db/migration

server:
  port: 8080
  servlet:
    context-path: /api

open-router:
  api:
    key: ${OPEN_ROUTER_API_KEY}

security:
  secret-key: ${SECURITY_SECRET_KEY}
  expiration-token: 1 # hours

logging:
  level:
    org.springframework:
      web: DEBUG
      security: DEBUG
      web.multipart: DEBUG
      http.converter: DEBUG

azure:
  storage:
    terracota:
      account-name: ${AZURE_STORAGE_ACCOUNT_NAME}
      account-key: ${AZURE_STORAGE_ACCOUNT_KEY}
      blob-endpoint: ${AZURE_STORAGE_BLOB_ENDPOINT}
      photos-container-name: ${AZURE_STORAGE_PHOTOS_CONTAINER_NAME}

storage:
  terracota:
    location-pattern: id
    filename-pattern: type

mercado-pago:
  terracota:
    public-key: ${MERCADO_PAGO_PUBLIC_KEY}
    access-token: ${MERCADO_PAGO_ACCESS_TOKEN}
    client-id: ${MERCADO_PAGO_CLIENT_ID}
    client-secret: ${MERCADO_PAGO_CLIENT_SECRET}